/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body, #root, .App {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* End reset */
/* Utility Classes */
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}


.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

.d-none {
  display: none;
}

.bg-clear {
  background: none;
}


.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
  outline: 1px solid red;
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

.rounded {
  border-radius: 15px;
}

/* Var Presets*/

:root {
  /* Colors */
  --clr-scissors-1: 40 84% 53%;
  --clr-scissors-2: 39 89% 40%;
  --clr-paper-1: 230 89% 65%;
  --clr-paper-2: 230 89% 55%;
  --clr-rock-1: 349 88% 56%;
  --clr-rock-2: 349 73% 45%;
  --clr-lizard-1: 261 73% 60%;
  --clr-lizard-2: 261 72% 63%;
  --clr-cyan-1: 189 59% 53%;
  --clr-cyan-2: 189 58% 57%;

  --clr-dark: 229 25% 31%;
  --clr-score: 229 64% 46%;
  --clr-header: 217 16% 45%;
  --clr-light: 0 0% 100%;

  --clr-bg-1: 214 47% 23%;
  --clr-bg-2: 237 49% 15%;

  /* Font-sizes */
  /* --fs-900: 4.675rem;
  --fs-800: 3.125rem;
  --fs-700: 1.75rem;
  --fs-600: 1rem;
  --fs-500: .875rem;
  --fs-400: .563rem;
  --fs-300: .5rem;
  --fs-200: 0.4375rem; */
  --fs-900: 9.375rem;
  --fs-800: 6.25rem;
  --fs-700: 2.75rem;
  --fs-600: 2rem;
  --fs-500: 1.75rem;
  --fs-400: 1.125rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* Font Families */

  /* Other */
  --icon-size: 185px;

}

@media (min-width: 45em) {

  :root {
    /* Font-sizes */
    /* --fs-900: 9.375rem;
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-500: 1.75rem;
    --fs-400: 1.125rem;
    --fs-300: 1rem;
    --fs-200: 0.875rem; */
  }
  

}

/* Colors Classes */
.bg-dark {background-color: hsl(var(--clr-dark));}
.bg-light {background-color: hsl(var(--clr-light));}

.txt-dark {color: hsl(var(--clr-dark));}
.txt-light {color: hsl(var(--clr-light));}

/* Typology Classes*/
.uppercase {text-transform: uppercase;}

.fs-900 {font-size: var(--fs-900);}
.fs-800 {font-size: var(--fs-800);}
.fs-700 {font-size: var(--fs-700);}
.fs-600 {font-size: var(--fs-600);}
.fs-500 {font-size: var(--fs-500);}
.fs-400 {font-size: var(--fs-400);}
.fs-300 {font-size: var(--fs-300);}
.fs-200 {font-size: var(--fs-200);}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

@import url('https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@600;700&display=swap');

html,
body {
  height: auto;
  font-family: 'Barlow Semi Condensed', sans-serif;
}

body {
  background: no-repeat linear-gradient(hsl(var(--clr-bg-1)), hsl(var(--clr-bg-2)));
}

.content-container {
  height: 100vh;
  justify-content: space-between;
  align-items: space-between;
  flex-direction: column;
  padding: 2em;
}

.App {
  position: relative;
  height: 100%;
}

/* Buttons */
.rules-btn {
  color: white;
  border: 2px solid white;
  padding: .7em 2em;
  margin-inline: auto;
}

.rules-btn:hover {
  background-color: white;
  color: hsl(var(--clr-dark));
}

.btn {
  width: 100%;
  padding: 15px 0;
  border-radius: 12px;
  margin: 15px 2px;
}

/* Rules modal */
.rules-dialog {
  align-items: center;
  justify-items: center;
  height: 100vh;
  border: none;
}

.rules-dialog::backdrop {
  position: fixed;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  background: white;
}

.rules-title {
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 25px 0;
}

.rules-close-btn {
  cursor: pointer;
  width: 24px;
  height: 24px;
  position: relative;
  background: none;
  border: none;
  transition: all 0.25s;
}

.rules-close-btn[data-display="desktop"]{
  display: none;
}

.rules-close-btn[data-display="mobile"] {
  margin: 50px auto;
}

.rules-close-1, .rules-close-2 {
  position: absolute;
  top: 0;
  left: 0;
  width: 24px;
  height: 4px;
  background: hsl(var(--clr-header));
  transform: rotate(0);
 
}

.rules-close-1 {
  transform: rotate(45deg) translateY(6px) translateX(6px);
}

.rules-close-2 {
  transform: rotate(-45deg) translateY(6px) translateX(-6px);
}

@media (min-width: 900px){
  .rules-container {
    align-content: end;
  }
  .rules-close-btn[data-display="mobile"] {
    display: none;
  }

  .rules-close-btn[data-display="desktop"] {
    display: inline;
  }

  .rules-dialog {
    height: 400px;
  }

  .rules-title {
    justify-content: space-between;
  }
  
  .rules-dialog::backdrop {
    background-color: hsl(var(--clr-dark) / .6);
  }
}

/* Score */
.score {
  border: 2px solid white;
  justify-content: space-between;
}

.score-gametype {
  display: block;
  margin: auto 25px;
  padding: 10px;
  align-items: flex-start;
}

.score-counter {
  margin: 2em;
  padding: 25px;
  --gap: 0em;
  place-items: center;
  background-color: white;
}

.score-label {
  color: hsl(var(--clr-score))
}

/* Game Window Styling */
.game-window {
  height: 100%;

}
.game-move-select {
  padding: 50px 0px;
  background-image: url(../img/bg-triangle.svg);
  background-repeat: no-repeat;
  background-position: center;
}

.game-match {
  height: 100%;
  padding: 10px 0px;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto; 
  grid-template-areas: 
      "player opponent"
      "prompt prompt";
}

.game-card {
  flex-direction: column-reverse;
}

.game-row {
  width: 100%;
  margin: 0 auto;
  justify-content: center;

}

.game-card[data-owner="player"] {
  grid-area: player;
}

.game-card[data-owner="opponent"] {
  grid-area: opponent;
}

.game-prompt {
  height: 100%;
  grid-area: prompt;
  margin: auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
}

.game-prompt > * {
  display: flex;
  justify-content: center;
  align-items: center;
}

.game-card > * {
  display: flex;
  justify-content: center;
  align-items: center;
}


@media (min-width: 900px) {
  .game-card {
    flex-direction: column;
  }
  .score {
    margin-inline: 20%;
  }
  .game-match {
    grid-template-columns: 1fr 1fr 1fr; 
    grid-template-areas: "player prompt opponent";
  }

  .game-icon[data-type="selected"]{
    --icon-size: 300px;
  }
}

/* Icon Styling */
.game-icon {
  background-position: 0 -10px;
  width: var(--icon-size);
  height: var(--icon-size);
  margin: 20px;
  border-radius: 50%;
  align-items: center;
  justify-content: center;
}

.game-icon[data-type="selected"]{
  margin: 10px auto;
}

.game-icon img {
  /* background-position: 0 5px;;
  background-image: radial-gradient(circle at center, hsl(var(--clr-light)) 65%, hsl(var(--clr-header)) 65%); */
  cursor: pointer;
  width: calc(var(--icon-size) - 20%); 
  height: calc(var(--icon-size) - 20%); 
  background-color: white;
  box-shadow: inset 0 7px 0 1px hsl(var(--clr-header));
  padding: 20%;
  border-radius: 50%;
}


.rock-bg {
  background-color: hsl(var(--clr-rock-1));
  box-shadow: inset 0 -10px 0 2px hsl(var(--clr-rock-2));

}

.scissors-bg {
  background-color: hsl(var(--clr-scissors-1));
  box-shadow: inset 0 -10px 0 2px hsl(var(--clr-scissors-2));
}

.paper-bg {
  background-color: hsl(var(--clr-paper-1));
  box-shadow: inset 0 -10px 0 2px hsl(var(--clr-paper-2));
}

.empty-bg {
  background-color: hsl(var(--clr-bg-2));
  opacity: .5;
}